@using Archean.App.WebApp.Extensions
@using Archean.App.WebApp.Settings
@using Microsoft.Extensions.Options
@inject IOptions<WebAppSettings> WebAppSettings

<PageTitle>Login - Archean</PageTitle>

<div style="display: grid; margin: auto">
    @if (string.IsNullOrWhiteSpace(WebAppSettings.Value.SitePassword))
    {
        <div class="interface interface-dialog">
            <div class="interface-text text-red login-failed">Server website unavailable, server password is not defined</div>
        </div>
    }
    else
    {
        <form method="post" action="@AuthenticationExtensions.LoginApiUrl">
            <div class="interface interface-dialog">
                <AntiforgeryToken />
                <div class="interface-dialog-title">Server administration</div>
                <input type="password" name="password" @ref="_passwordRef" />
                <button type="submit" class="button-green">Sign in</button>
                @if (LoginFail != null)
                {
                    <div class="interface-text text-red login-failed">Login failed</div>
                }
            </div>
        </form>
    }
</div>

@code
{
    private ElementReference _passwordRef;

    [SupplyParameterFromQuery]
    private string? LoginFail { get; init; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _passwordRef.FocusAsync();
        }
    }
}
