@page "/chat"
@using Archean.App.WebApp.Services
@using Archean.Core.Models.Events
@using Archean.Core.Services.Events
@using System.Text.RegularExpressions
@inject MemoryLoggerOutput MemoryLoggerOutput
@inject ChatLogService ChatLogService
@inject IGlobalEventBus GlobalEventBus

<PageTitle>Chat - Archean</PageTitle>

<div class="interface" style="overflow: hidden">
    <div class="interface-title">Chat</div>
    <div class="interface-indentation" style="background-color: #000; gap: var(--spacing); padding: var(--spacing); overflow: scroll; flex-grow: 1; color: #fff; font-size: 14px">
        @foreach (string message in ChatLogService.Messages)
        {
            <div>
                @foreach (Match match in Regex.Matches(message, "(&[0-9a-f]|^)?(.+?)(?=&|$)", RegexOptions.IgnoreCase))
                {
                    <span style="color: @GetColor(match.Groups[1].Value)">@match.Groups[2].Value</span>
                }
            </div>
        }
    </div>
    <div style="display: flex; gap: var(--spacing)">
        <input type="text" style="flex-grow: 1" placeholder="Chat as server..." @bind="_message" @onkeyup="(async args => await OnTextboxSubmit(args))" />
        <button @onclick="(async () => await OnSubmitAsync())">Send message</button>
    </div>
</div>

@code
{
    private string? _message;

    private async Task OnTextboxSubmit(KeyboardEventArgs args)
    {
        if (args.Code == "Enter")
        {
            await OnSubmitAsync();
        }
    }

    private async Task OnSubmitAsync()
    {
        if (string.IsNullOrWhiteSpace(_message))
        {
            return;
        }

        await GlobalEventBus.InvokeEventAsync(new MessageEvent
        {
            PlayerSender = null,
            Message = _message
        });

        _message = null;
    }

    private string GetColor(string colorTag)
    {
        return colorTag switch
        {
            "&0" => "#000",
            "&1" => "#00A",
            "&2" => "#0A0",
            "&3" => "#0AA",
            "&4" => "#A00",
            "&5" => "#A0A",
            "&6" => "#AA0",
            "&7" => "#AAA",
            "&8" => "#555",
            "&9" => "#55F",
            "&a" => "#5F5",
            "&b" => "#5FF",
            "&c" => "#F55",
            "&d" => "#F5F",
            "&e" => "#FF5",
            "&f" => "#FFF",
            _ => "#fff"
        };
    }
}
